{{- if .Values.rabbitmq.enabled -}}
# ConfigMap for RabbitMQ enabled plugins
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "store-app.fullname" . }}-rabbitmq-plugins
  labels:
    {{- include "store-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
data:
  rabbitmq_enabled_plugins: |
    {{ .Values.rabbitmq.configMap.enabledPlugins }}
---
# Service for RabbitMQ
apiVersion: v1
kind: Service
metadata:
  name: {{ include "store-app.fullname" . }}-{{ .Values.rabbitmq.service.name }}
  labels:
    {{- include "store-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
spec:
  type: {{ .Values.rabbitmq.service.type }}
  ports:
    - port: {{ .Values.rabbitmq.service.amqpPort }}
      targetPort: {{ .Values.rabbitmq.service.amqpPort }}
      name: rabbitmq-amqp
    - port: {{ .Values.rabbitmq.service.httpPort }}
      targetPort: {{ .Values.rabbitmq.service.httpPort }}
      name: rabbitmq-http
  selector:
    {{- include "store-app.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
---
# StatefulSet for RabbitMQ
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "store-app.fullname" . }}-rabbitmq
  labels:
    {{- include "store-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
spec:
  serviceName: {{ include "store-app.fullname" . }}-{{ .Values.rabbitmq.service.name }}
  replicas: {{ .Values.rabbitmq.replicaCount }}
  selector:
    matchLabels:
      {{- include "store-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: rabbitmq
  template:
    metadata:
      labels:
        {{- include "store-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: rabbitmq
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "store-app.serviceAccountName" . }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      containers:
      - name: rabbitmq
        image: "{{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.rabbitmq.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.rabbitmq.service.amqpPort }}
          name: rabbitmq-amqp
        - containerPort: {{ .Values.rabbitmq.service.httpPort }}
          name: rabbitmq-http
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: {{ .Values.rabbitmq.credentials.username | quote }}
        - name: RABBITMQ_DEFAULT_PASS
          value: {{ .Values.rabbitmq.credentials.password | quote }}
        resources:
          {{- toYaml .Values.rabbitmq.resources | nindent 10 }}
        volumeMounts:
        - name: rabbitmq-enabled-plugins-volume
          mountPath: /etc/rabbitmq/enabled_plugins
          subPath: enabled_plugins
      volumes:
      - name: rabbitmq-enabled-plugins-volume
        configMap:
          name: {{ include "store-app.fullname" . }}-rabbitmq-plugins
          items:
          - key: rabbitmq_enabled_plugins
            path: enabled_plugins
  {{- with .Values.rabbitmq.persistence }}
  {{- if .enabled }}
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .storageClass | quote }}
      resources:
        requests:
          storage: {{ .size | quote }}
  {{- end }}
  {{- end }}
{{- end }}
