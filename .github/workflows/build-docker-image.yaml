name: Build Docker Image from App Repo

on:
  repository_dispatch:
    types: [app-repo-main-updated]
  workflow_dispatch: # Added for manual trigger

jobs:
  build-and-update-deployment:
    runs-on: self-hosted
    steps:
      - name: Checkout Application Repository
        uses: actions/checkout@v4
        with:
          repository: Azure-Samples/aks-store-demo # e.g., your-org/app-repo-name
          # token: ${{ secrets.GITPAT }} # Removed for public repository
          ref: main

      - name: Generate Image Tag
        id: image_tag_generator
        run: |
          TIMESTAMP=$(date +%s)
          echo "EPOCH_TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "Generated image tag: $TIMESTAMP"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          # registry: youracr.azurecr.io # Removed for Docker Hub
          username: ${{ secrets.DOCKER_USERNAME }} # Should be your Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }} # Should be your Docker Hub password or access token

      - name: Build and push Docker image
        id: build_image
        uses: docker/build-push-action@v5
        with:
          context: ./src/store-front # Build context
          file: ./src/store-front/Dockerfile # Path to Dockerfile from repo root
          push: true
          tags: amohanda/demo-store-front:${{ env.EPOCH_TIMESTAMP }} # Use generated epoch timestamp
          # You can add build-args, labels etc. here if needed
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - name: Update image tag in HelmRelease
        run: |
          git clone https://github.com/infa-amohanda/aks-store-ops.git # Clone the ops repository
          cd aks-store-ops
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://infa-amohanda:${{ secrets.GITPAT }}@github.com/infa-amohanda/aks-store-ops.git

          IMAGE_TAG="${{ env.EPOCH_TIMESTAMP }}" # Use generated epoch timestamp
          echo "Updating image tag to: $IMAGE_TAG"

          # # Install yq for YAML manipulation
          # sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

          IMAGE_TAG=${IMAGE_TAG} yq e '.spec.values.storeFront.image.tag = env(IMAGE_TAG) | .spec.values.storeFront.image.tag style="double"' -i deploy/aks/foundation/aks-store-demo/store-app-release.yaml

          echo "Updated store-app-release.yaml content:"
          cat deploy/aks/foundation/aks-store-demo/store-app-release.yaml

          git add deploy/aks/foundation/aks-store-demo/store-app-release.yaml
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to store-app-release.yaml."
          else
            git commit -m "Update application image tag to ${{ env.EPOCH_TIMESTAMP }}" # Use generated epoch timestamp
            git push
          fi
