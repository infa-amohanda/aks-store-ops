name: Build Docker Image from App Repo

on:
  repository_dispatch:
    types: [app-repo-main-updated]

jobs:
  build-and-update-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Application Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repository }} # e.g., your-org/app-repo-name
          token: ${{ secrets.PAT_FOR_APP_REPO_CHECKOUT }}    # PAT with read access to the app repo
          ref: ${{ github.event.client_payload.commit_sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: youracr.azurecr.io # <-- TODO: Replace with your ACR login server
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        id: build_image
        uses: docker/build-push-action@v5
        with:
          context: . # Assumes Dockerfile is at the root of the checked-out app repo
          file: ./Dockerfile # Assumes Dockerfile is at the root of the app repo
          push: true
          tags: youracr.azurecr.io/aks-store-demo:${{ github.event.client_payload.commit_sha }} # <-- TODO: Replace ACR & image name
          # You can add build-args, labels etc. here if needed
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - name: Checkout Ops Repository (aks-store-ops)
        uses: actions/checkout@v4
        with:
          # This token is necessary to push changes back to this ops repository
          token: ${{ secrets.PAT_FOR_OPS_REPO_PUSH }} # PAT with write access to this aks-store-ops repo

      - name: Update image tag in HelmRelease
        run: |
          IMAGE_TAG="${{ github.event.client_payload.commit_sha }}"
          echo "Updating image tag to: $IMAGE_TAG"

          # Install yq for YAML manipulation
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

          yq e '.spec.values.image.tag = strenv(IMAGE_TAG)' -i deploy/aks/foundation/aks-store-demo/app-release.yaml

          echo "Updated app-release.yaml content:"
          cat deploy/aks/foundation/aks-store-demo/app-release.yaml

      - name: Commit and push changes to ops repo
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add deploy/aks/foundation/aks-store-demo/app-release.yaml
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to app-release.yaml."
          else
            git commit -m "Update application image tag to ${{ github.event.client_payload.commit_sha }}"
            git push
          fi
